Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\BTZGDRtx.X.production.sym \
  --cmf=dist/default/production\BTZGDRtx.X.production.cmf -z -Q12LF1572 \
  -oC:\Users\MIKROT~1\AppData\Local\Temp\sarg.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/BTZGDRtx.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=020C8h-020EFh -pstack=STACK \
  -p_reserve_location_text=7E0h -ACODE=00h-07FFh -ASTRCODE=00h-07FFh \
  -ASTRING=00h-0FFhx8 -ACONST=00h-0FFhx8 -AENTRY=00h-0FFhx8 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0120h-016Fh -ABIGRAM=02000h-020EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0120h-016Fh \
  -AABS1=020h-07Fh,0A0h-0EFh,0120h-016Fh -ASFR0=00h-01Fh -ASFR1=080h-09Fh \
  -ASFR2=0100h-011Fh -ASFR3=0180h-01EFh -ASFR4=0200h-026Fh \
  -ASFR5=0280h-02EFh -ASFR6=0300h-036Fh -ASFR7=0380h-03EFh \
  -ASFR8=0400h-046Fh -ASFR9=0480h-04EFh -ASFR10=0500h-056Fh \
  -ASFR11=0580h-05EFh -ASFR12=0600h-066Fh -ASFR13=0680h-06EFh \
  -ASFR14=0700h-076Fh -ASFR15=0780h-07EFh -ASFR16=0800h-086Fh \
  -ASFR17=0880h-08EFh -ASFR18=0900h-096Fh -ASFR19=0980h-09EFh \
  -ASFR20=0A00h-0A6Fh -ASFR21=0A80h-0AEFh -ASFR22=0B00h-0B6Fh \
  -ASFR23=0B80h-0BEFh -ASFR24=0C00h-0C6Fh -ASFR25=0C80h-0CEFh \
  -ASFR26=0D00h-0D6Fh -ASFR27=0D80h-0DEFh -ASFR28=0E00h-0E6Fh \
  -ASFR29=0E80h-0EEFh -ASFR30=0F00h-0F6Fh -ASFR31=0F80h-0FEFh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=08007h-08008h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=08000h-08003h -pidloc=IDLOC -DIDLOC=2 -DCODE=2 -DSTRCODE=2 \
  -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\MIKROT~1\AppData\Local\Temp\sarg.o \
  dist/default/production\BTZGDRtx.X.production.o 

Object code version is 3.11

Machine type is 12LF1572



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\MIKROT~1\AppData\Local\Temp\sarg.o
                end_init                             14       14        1        8       0
                reset_vec                             0        0        1        0       0
                config                             8007     8007        2    1000E       0
dist/default/production\BTZGDRtx.X.production.o
                cinit                                15       15        F        8       0
                intentry                              4        4       10        8       0
                text24                              6E5      6E5        8      D8E       0
                text22                              29D      29D       85        8       0
                text21                              5EF      5EF       2A        8       0
                text20                              6C7      6C7        C      D8E       0
                text19                              5BC      5BC       33        8       0
                text18                              6D3      6D3        A      D8E       0
                text17                              681      681       14        8       0
                text16                              619      619       20        8       0
                text15                              4FD      4FD       47        8       0
                text14                              322      322       81        8       0
                text13                              6DD      6DD        8      D8E       0
                text12                              66B      66B       16        8       0
                text11                              1ED      1ED       B0        8       0
                text10                               24       24      1C9        8       0
                text9                               3A3      3A3       63        8       0
                text8                               6A6      6A6       11        8       0
                text7                               639      639       1A        8       0
                text6                               4B1      4B1       4C        8       0
                text5                               653      653       18        8       0
                text4                               460      460       51        8       0
                text3                               544      544       42        8       0
                text2                               695      695       11        8       0
                text1                               586      586       36        8       0
                maintext                            406      406       5A        8       0
                cstackBANK0                          20       20       4E       20       1
                cstackCOMMON                         70       70        D       70       1
                cstackBANK1                          CD       CD       19       A0       1
                clrtext                             6ED      6ED        6      D8E       0
                bssBANK2                            120      120       28      120       1
                bssBANK1                             A0       A0       2D       A0       1
                nvCOMMON                             7D       7D        1       70       1
                _reserve_location_text              7E0      7E0       20      FC0       0
                stringtext1                         6B7      6B7       10      D6E       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             14       14        1         0
                cinit                                15       15        F         0
                intentry                              4        4       10         0
                reset_vec                             0        0        1         0
                text24                              6E5      6E5        8         0
                text22                              29D      29D       85         0
                text21                              5EF      5EF       2A         0
                text20                              6C7      6C7        C         0
                text19                              5BC      5BC       33         0
                text18                              6D3      6D3        A         0
                text17                              681      681       14         0
                text16                              619      619       20         0
                text15                              4FD      4FD       47         0
                text14                              322      322       81         0
                text13                              6DD      6DD        8         0
                text12                              66B      66B       16         0
                text11                              1ED      1ED       B0         0
                text10                               24       24      1C9         0
                text9                               3A3      3A3       63         0
                text8                               6A6      6A6       11         0
                text7                               639      639       1A         0
                text6                               4B1      4B1       4C         0
                text5                               653      653       18         0
                text4                               460      460       51         0
                text3                               544      544       42         0
                text2                               695      695       11         0
                text1                               586      586       36         0
                maintext                            406      406       5A         0
                clrtext                             6ED      6ED        6         0

        CLASS   STRCODE        
                _reserve_location_text              7E0      7E0       20         0
                stringtext1                         6B7      6B7       10         0

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        D         1
                nvCOMMON                             7D       7D        1         1

        CLASS   BANK0          
                cstackBANK0                          20       20       4E         1

        CLASS   BANK1          
                cstackBANK1                          CD       CD       19         1
                bssBANK1                             A0       A0       2D         1

        CLASS   BANK2          
                bssBANK2                            120      120       28         1

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   SFR4           

        CLASS   SFR5           

        CLASS   SFR6           

        CLASS   SFR7           

        CLASS   SFR8           

        CLASS   SFR9           

        CLASS   SFR10          

        CLASS   SFR11          

        CLASS   SFR12          

        CLASS   SFR13          

        CLASS   SFR14          

        CLASS   SFR15          

        CLASS   SFR16          

        CLASS   SFR17          

        CLASS   SFR18          

        CLASS   SFR19          

        CLASS   SFR20          

        CLASS   SFR21          

        CLASS   SFR22          

        CLASS   SFR23          

        CLASS   SFR24          

        CLASS   SFR25          

        CLASS   SFR26          

        CLASS   SFR27          

        CLASS   SFR28          

        CLASS   SFR29          

        CLASS   SFR30          

        CLASS   SFR31          

        CLASS   CONFIG         
                config                             8007     8007        2         0

        CLASS   IDLOC          

        CLASS   BANK31         

        CLASS   BANK30         

        CLASS   BANK29         

        CLASS   BANK28         

        CLASS   BANK27         

        CLASS   BANK26         

        CLASS   BANK25         

        CLASS   BANK24         

        CLASS   BANK23         

        CLASS   BANK22         

        CLASS   BANK21         

        CLASS   BANK20         

        CLASS   BANK19         

        CLASS   BANK18         

        CLASS   BANK17         

        CLASS   BANK16         

        CLASS   BANK15         

        CLASS   BANK14         

        CLASS   BANK13         

        CLASS   BANK12         

        CLASS   BANK11         

        CLASS   BANK10         

        CLASS   BANK9          

        CLASS   BANK8          

        CLASS   BANK7          

        CLASS   BANK6          

        CLASS   BANK5          

        CLASS   BANK4          

        CLASS   BANK3          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000001  000001         0       0  CODE        2
                intentry                       000004  0006B3  0006B7         8       0  CODE        2
                cstackBANK0                    000020  00004E  00006E        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000046  0000E6        A0       1  BANK1       1
                bssBANK2                       000120  000028  000148       120       1  BANK2       1
                stringtext1                    0006B7  000010  0006C7       D6E       0  STRCODE     2
                text20                         0006C7  00002C  0006F3       D8E       0  CODE        2
                _reserve_location_text         0007E0  000020  000800       FC0       0  STRCODE     2
                config                         008007  000002  008009     1000E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0006E-0006F               2           1
        BANK1            000E6-000EF               A           1
        BANK2            00148-0016F              28           1
        BIGRAM           02000-020EF              F0           1
        CODE             00001-00003               3           2
                         006F3-007DF              ED
        CONST            00001-00003               3           2
                         006F3-007DF               D
        ENTRY            00001-00003               3           2
                         006F3-007DF               D
        IDLOC            08000-08003               4           2
        RAM              0006E-0006F               2           1
                         000E6-000EF               A
                         00148-0016F              28
        SFR0             00000-0001F              20           1
        SFR1             00080-0009F              20           1
        SFR10            00500-0056F              70           1
        SFR11            00580-005EF              70           1
        SFR12            00600-0066F              70           1
        SFR13            00680-006EF              70           1
        SFR14            00700-0076F              70           1
        SFR15            00780-007EF              70           1
        SFR16            00800-0086F              70           1
        SFR17            00880-008EF              70           1
        SFR18            00900-0096F              70           1
        SFR19            00980-009EF              70           1
        SFR2             00100-0011F              20           1
        SFR20            00A00-00A6F              70           1
        SFR21            00A80-00AEF              70           1
        SFR22            00B00-00B6F              70           1
        SFR23            00B80-00BEF              70           1
        SFR24            00C00-00C6F              70           1
        SFR25            00C80-00CEF              70           1
        SFR26            00D00-00D6F              70           1
        SFR27            00D80-00DEF              70           1
        SFR28            00E00-00E6F              70           1
        SFR29            00E80-00EEF              70           1
        SFR3             00180-001EF              70           1
        SFR30            00F00-00F6F              70           1
        SFR31            00F80-00FEF              70           1
        SFR4             00200-0026F              70           1
        SFR5             00280-002EF              70           1
        SFR6             00300-0036F              70           1
        SFR7             00380-003EF              70           1
        SFR8             00400-0046F              70           1
        SFR9             00480-004EF              70           1
        STACK            020C8-020EF              28           1
        STRCODE          00001-00003               3           2
                         006F3-007DF              ED
        STRING           00001-00003               3           2
                         006F3-007DF               D

                                  Symbol Table

?_FLASH_ReadWord                     cstackCOMMON           00070
?___omul                             cstackBANK0            00020
?_millis                             cstackCOMMON           00070
?_rand                               cstackCOMMON           00079
FLASH_EraseBlock@GIEBitValue         cstackCOMMON           00072
FLASH_EraseBlock@startAddr           cstackCOMMON           00070
FLASH_ReadWord@GIEBitValue           cstackCOMMON           00072
FLASH_ReadWord@flashAddr             cstackCOMMON           00070
FLASH_WriteBlock@GIEBitValue         cstackCOMMON           00079
FLASH_WriteBlock@blockStartAddr      cstackCOMMON           0007A
FLASH_WriteBlock@flashWordArray      cstackCOMMON           00075
FLASH_WriteBlock@i                   cstackCOMMON           0007C
FLASH_WriteBlock@writeAddr           cstackCOMMON           00073
PL10                                 text22                 0031A
PL12                                 text21                 00612
PL14                                 text9                  003FB
PL16                                 text6                  004EC
PL18                                 text10                 001BC
PL2                                  text9                  003F2
PL20                                 text12                 00678
PL22                                 text9                  00401
PL24                                 text3                  00574
PL26                                 text3                  00579
PL28                                 text10                 001C5
PL30                                 text10                 001CC
PL32                                 text6                  004F6
PL34                                 text4                  004AC
PL36                                 text3                  00580
PL38                                 text10                 001D3
PL4                                  text11                 00290
PL40                                 text10                 001D9
PL42                                 text10                 001DE
PL44                                 text10                 001E3
PL46                                 text10                 001E8
PL6                                  text22                 00302
PL8                                  text22                 0030D
_ANSELA                              (abs)                  0018C
_APFCON                              (abs)                  0011D
_BAUDCON                             (abs)                  0019F
_BORCON                              (abs)                  00116
_FLASH_EraseBlock                    text5                  00653
_FLASH_ReadWord                      text7                  00639
_FLASH_WriteBlock                    text4                  00460
_INLVLA                              (abs)                  0038C
_INTCONbits                          (abs)                  0000B
_INTERRUPT_InterruptManager          intentry               00004
_LATA                                (abs)                  0010C
_ODCONA                              (abs)                  0028C
_OPTION_REG                          (abs)                  00095
_OPTION_REGbits                      (abs)                  00095
_OSCCON                              (abs)                  00099
_OSCTUNE                             (abs)                  00098
_PIR1bits                            (abs)                  00011
_PMADRH                              (abs)                  00192
_PMADRL                              (abs)                  00191
_PMCON1bits                          (abs)                  00195
_PMCON2                              (abs)                  00196
_PMDATH                              (abs)                  00194
_PMDATL                              (abs)                  00193
_PORTAbits                           (abs)                  0000C
_RCSTA                               (abs)                  0019D
_SLRCONA                             (abs)                  0030C
_SPBRGH                              (abs)                  0019C
_SPBRGL                              (abs)                  0019B
_TMR0                                (abs)                  00015
_TRISA                               (abs)                  0008C
_TXREG                               (abs)                  0019A
_TXSTA                               (abs)                  0019E
_WDTCON                              (abs)                  00097
_WPUA                                (abs)                  0020C
__CFG_BOREN$ON                       (abs)                  00000
__CFG_BORV$LO                        (abs)                  00000
__CFG_CLKOUTEN$OFF                   (abs)                  00000
__CFG_CP$OFF                         (abs)                  00000
__CFG_FOSC$INTOSC                    (abs)                  00000
__CFG_LPBOREN$OFF                    (abs)                  00000
__CFG_LVP$ON                         (abs)                  00000
__CFG_MCLRE$ON                       (abs)                  00000
__CFG_PLLEN$OFF                      (abs)                  00000
__CFG_PWRTE$OFF                      (abs)                  00000
__CFG_STVREN$ON                      (abs)                  00000
__CFG_WDTE$OFF                       (abs)                  00000
__CFG_WRT$OFF                        (abs)                  00000
__H_reserve_location_text            _reserve_location_text 00800
__Habs1                              abs1                   00000
__Hbank0                             bank0                  00000
__Hbank1                             bank1                  00000
__Hbank10                            bank10                 00000
__Hbank11                            bank11                 00000
__Hbank12                            bank12                 00000
__Hbank13                            bank13                 00000
__Hbank14                            bank14                 00000
__Hbank15                            bank15                 00000
__Hbank16                            bank16                 00000
__Hbank17                            bank17                 00000
__Hbank18                            bank18                 00000
__Hbank19                            bank19                 00000
__Hbank2                             bank2                  00000
__Hbank20                            bank20                 00000
__Hbank21                            bank21                 00000
__Hbank22                            bank22                 00000
__Hbank23                            bank23                 00000
__Hbank24                            bank24                 00000
__Hbank25                            bank25                 00000
__Hbank26                            bank26                 00000
__Hbank27                            bank27                 00000
__Hbank28                            bank28                 00000
__Hbank29                            bank29                 00000
__Hbank3                             bank3                  00000
__Hbank30                            bank30                 00000
__Hbank31                            bank31                 00000
__Hbank4                             bank4                  00000
__Hbank5                             bank5                  00000
__Hbank6                             bank6                  00000
__Hbank7                             bank7                  00000
__Hbank8                             bank8                  00000
__Hbank9                             bank9                  00000
__Hbigram                            bigram                 00000
__HbssBANK1                          bssBANK1               00000
__HbssBANK2                          bssBANK2               00000
__Hcinit                             cinit                  00024
__Hclrtext                           clrtext                00000
__Hcode                              code                   00000
__Hcommon                            common                 00000
__Hconfig                            config                 08009
__HcstackBANK0                       cstackBANK0            00000
__HcstackBANK1                       cstackBANK1            00000
__HcstackCOMMON                      cstackCOMMON           00000
__Heeprom_data                       eeprom_data            00000
__Hend_init                          end_init               00015
__Hfunctab                           functab                00000
__Hidloc                             idloc                  00000
__Hinit                              init                   00014
__Hintentry                          intentry               00014
__Hmaintext                          maintext               00000
__HnvCOMMON                          nvCOMMON               00000
__Hpa_nodes0                         pa_nodes0              00000
__Hpowerup                           powerup                00000
__Hram                               ram                    00000
__Hreset_vec                         reset_vec              00001
__Hsfr0                              sfr0                   00000
__Hsfr1                              sfr1                   00000
__Hsfr10                             sfr10                  00000
__Hsfr11                             sfr11                  00000
__Hsfr12                             sfr12                  00000
__Hsfr13                             sfr13                  00000
__Hsfr14                             sfr14                  00000
__Hsfr15                             sfr15                  00000
__Hsfr16                             sfr16                  00000
__Hsfr17                             sfr17                  00000
__Hsfr18                             sfr18                  00000
__Hsfr19                             sfr19                  00000
__Hsfr2                              sfr2                   00000
__Hsfr20                             sfr20                  00000
__Hsfr21                             sfr21                  00000
__Hsfr22                             sfr22                  00000
__Hsfr23                             sfr23                  00000
__Hsfr24                             sfr24                  00000
__Hsfr25                             sfr25                  00000
__Hsfr26                             sfr26                  00000
__Hsfr27                             sfr27                  00000
__Hsfr28                             sfr28                  00000
__Hsfr29                             sfr29                  00000
__Hsfr3                              sfr3                   00000
__Hsfr30                             sfr30                  00000
__Hsfr31                             sfr31                  00000
__Hsfr4                              sfr4                   00000
__Hsfr5                              sfr5                   00000
__Hsfr6                              sfr6                   00000
__Hsfr7                              sfr7                   00000
__Hsfr8                              sfr8                   00000
__Hsfr9                              sfr9                   00000
__Hspace_0                           (abs)                  08009
__Hspace_1                           (abs)                  00148
__Hspace_2                           (abs)                  00000
__Hspace_3                           (abs)                  00000
__Hstack                             stack                  00000
__Hstrings                           strings                00000
__Hstringtext1                       stringtext1            00000
__Htext                              text                   00000
__L_reserve_location_text            _reserve_location_text 007E0
__Labs1                              abs1                   00000
__Lbank0                             bank0                  00000
__Lbank1                             bank1                  00000
__Lbank10                            bank10                 00000
__Lbank11                            bank11                 00000
__Lbank12                            bank12                 00000
__Lbank13                            bank13                 00000
__Lbank14                            bank14                 00000
__Lbank15                            bank15                 00000
__Lbank16                            bank16                 00000
__Lbank17                            bank17                 00000
__Lbank18                            bank18                 00000
__Lbank19                            bank19                 00000
__Lbank2                             bank2                  00000
__Lbank20                            bank20                 00000
__Lbank21                            bank21                 00000
__Lbank22                            bank22                 00000
__Lbank23                            bank23                 00000
__Lbank24                            bank24                 00000
__Lbank25                            bank25                 00000
__Lbank26                            bank26                 00000
__Lbank27                            bank27                 00000
__Lbank28                            bank28                 00000
__Lbank29                            bank29                 00000
__Lbank3                             bank3                  00000
__Lbank30                            bank30                 00000
__Lbank31                            bank31                 00000
__Lbank4                             bank4                  00000
__Lbank5                             bank5                  00000
__Lbank6                             bank6                  00000
__Lbank7                             bank7                  00000
__Lbank8                             bank8                  00000
__Lbank9                             bank9                  00000
__Lbigram                            bigram                 00000
__LbssBANK1                          bssBANK1               00000
__LbssBANK2                          bssBANK2               00000
__Lcinit                             cinit                  00015
__Lclrtext                           clrtext                00000
__Lcode                              code                   00000
__Lcommon                            common                 00000
__Lconfig                            config                 08007
__LcstackBANK0                       cstackBANK0            00000
__LcstackBANK1                       cstackBANK1            00000
__LcstackCOMMON                      cstackCOMMON           00000
__Leeprom_data                       eeprom_data            00000
__Lend_init                          end_init               00014
__Lfunctab                           functab                00000
__Lidloc                             idloc                  00000
__Linit                              init                   00014
__Lintentry                          intentry               00004
__Lmaintext                          maintext               00000
__LnvCOMMON                          nvCOMMON               00000
__Lpa_nodes0                         pa_nodes0              00000
__Lpowerup                           powerup                00000
__Lram                               ram                    00000
__Lreset_vec                         reset_vec              00000
__Lsfr0                              sfr0                   00000
__Lsfr1                              sfr1                   00000
__Lsfr10                             sfr10                  00000
__Lsfr11                             sfr11                  00000
__Lsfr12                             sfr12                  00000
__Lsfr13                             sfr13                  00000
__Lsfr14                             sfr14                  00000
__Lsfr15                             sfr15                  00000
__Lsfr16                             sfr16                  00000
__Lsfr17                             sfr17                  00000
__Lsfr18                             sfr18                  00000
__Lsfr19                             sfr19                  00000
__Lsfr2                              sfr2                   00000
__Lsfr20                             sfr20                  00000
__Lsfr21                             sfr21                  00000
__Lsfr22                             sfr22                  00000
__Lsfr23                             sfr23                  00000
__Lsfr24                             sfr24                  00000
__Lsfr25                             sfr25                  00000
__Lsfr26                             sfr26                  00000
__Lsfr27                             sfr27                  00000
__Lsfr28                             sfr28                  00000
__Lsfr29                             sfr29                  00000
__Lsfr3                              sfr3                   00000
__Lsfr30                             sfr30                  00000
__Lsfr31                             sfr31                  00000
__Lsfr4                              sfr4                   00000
__Lsfr5                              sfr5                   00000
__Lsfr6                              sfr6                   00000
__Lsfr7                              sfr7                   00000
__Lsfr8                              sfr8                   00000
__Lsfr9                              sfr9                   00000
__Lspace_0                           (abs)                  00000
__Lspace_1                           (abs)                  00000
__Lspace_2                           (abs)                  00000
__Lspace_3                           (abs)                  00000
__Lstack                             stack                  00000
__Lstrings                           strings                00000
__Lstringtext1                       stringtext1            00000
__Ltext                              text                   00000
__S0                                 (abs)                  08009
__S1                                 (abs)                  00148
__S2                                 (abs)                  00000
___bmul                              text20                 006C7
___bmul@multiplicand                 cstackCOMMON           00070
___bmul@multiplier                   cstackCOMMON           00072
___bmul@product                      cstackCOMMON           00071
___int_sp                            stack                  00000
___latbits                           (abs)                  00000
___omul                              text15                 004FD
___omul@multiplicand                 cstackBANK0            00028
___omul@multiplier                   cstackBANK0            00020
___omul@product                      cstackCOMMON           00071
___sp                                stack                  00000
___stackhi                           (abs)                  020EF
___stacklo                           (abs)                  020C8
__end_ofPL10                         text22                 00322
__end_ofPL12                         text21                 00619
__end_ofPL14                         text9                  00401
__end_ofPL16                         text6                  004F6
__end_ofPL18                         text10                 001C5
__end_ofPL2                          text9                  003FB
__end_ofPL20                         text12                 00681
__end_ofPL22                         text9                  00406
__end_ofPL24                         text3                  00579
__end_ofPL26                         text3                  00580
__end_ofPL28                         text10                 001CC
__end_ofPL30                         text10                 001D3
__end_ofPL32                         text6                  004FD
__end_ofPL34                         text4                  004B1
__end_ofPL36                         text3                  00586
__end_ofPL38                         text10                 001D9
__end_ofPL4                          text11                 0029D
__end_ofPL40                         text10                 001DE
__end_ofPL42                         text10                 001E3
__end_ofPL44                         text10                 001E8
__end_ofPL46                         text10                 001ED
__end_ofPL6                          text22                 0030D
__end_ofPL8                          text22                 0031A
__end_of_FLASH_EraseBlock            text5                  0066B
__end_of_FLASH_ReadWord              text7                  00653
__end_of_FLASH_WriteBlock            text4                  004AC
__end_of_INTERRUPT_InterruptManager  intentry               00014
__end_of___bmul                      text20                 006D3
__end_of___omul                      text15                 00544
__end_of__initialization             cinit                  00021
__end_of_bit_convt_4to6              stringtext1            006C7
__end_of_button_get_state            text19                 005EF
__end_of_button_init                 text21                 00612
__end_of_button_task                 text10                 001BC
__end_of_counter_inc                 text9                  003F2
__end_of_counter_inc_by_n            text8                  006B7
__end_of_counter_read                text6                  004EC
__end_of_counter_save                text3                  00574
__end_of_crc8                        text17                 00695
__end_of_main                        maintext               00460
__end_of_memcpy                      text16                 00639
__end_of_memset                      text22                 00302
__end_of_millis                      text18                 006DD
__end_of_rand                        text14                 003A3
__end_of_reserve_location            _reserve_location_text 00800
__end_of_rf_encrypt_and_send         text12                 00678
__end_of_rf_send_packet              text11                 00290
__end_of_srand                       text2                  006A6
__end_of_system_initialize           text1                  005BC
__end_of_timer_interrupt_handler     text24                 006ED
__end_of_usart_write                 text13                 006E5
__initialization                     cinit                  00015
__p_reserve_location_text            _reserve_location_text 007E0
__pbssBANK1                          bssBANK1               000A0
__pbssBANK2                          bssBANK2               00120
__pcstackBANK0                       cstackBANK0            00020
__pcstackBANK1                       cstackBANK1            000CD
__pcstackCOMMON                      cstackCOMMON           00070
__pintentry                          intentry               00004
__pmaintext                          maintext               00406
__pnvCOMMON                          nvCOMMON               0007D
__pstringtext1                       stringtext1            006B7
__ptext1                             text1                  00586
__ptext10                            text10                 00024
__ptext11                            text11                 001ED
__ptext12                            text12                 0066B
__ptext13                            text13                 006DD
__ptext14                            text14                 00322
__ptext15                            text15                 004FD
__ptext16                            text16                 00619
__ptext17                            text17                 00681
__ptext18                            text18                 006D3
__ptext19                            text19                 005BC
__ptext2                             text2                  00695
__ptext20                            text20                 006C7
__ptext21                            text21                 005EF
__ptext22                            text22                 0029D
__ptext24                            text24                 006E5
__ptext3                             text3                  00544
__ptext4                             text4                  00460
__ptext5                             text5                  00653
__ptext6                             text6                  004B1
__ptext7                             text7                  00639
__ptext8                             text8                  006A6
__ptext9                             text9                  003A3
__size_of_FLASH_EraseBlock           (abs)                  00000
__size_of_FLASH_ReadWord             (abs)                  00000
__size_of_FLASH_WriteBlock           (abs)                  00000
__size_of_INTERRUPT_InterruptManager (abs)                  00000
__size_of___bmul                     (abs)                  00000
__size_of___omul                     (abs)                  00000
__size_of_button_get_state           (abs)                  00000
__size_of_button_init                (abs)                  00000
__size_of_button_task                (abs)                  00000
__size_of_counter_inc                (abs)                  00000
__size_of_counter_inc_by_n           (abs)                  00000
__size_of_counter_read               (abs)                  00000
__size_of_counter_save               (abs)                  00000
__size_of_crc8                       (abs)                  00000
__size_of_main                       (abs)                  00000
__size_of_memcpy                     (abs)                  00000
__size_of_memset                     (abs)                  00000
__size_of_millis                     (abs)                  00000
__size_of_rand                       (abs)                  00000
__size_of_rf_encrypt_and_send        (abs)                  00000
__size_of_rf_send_packet             (abs)                  00000
__size_of_srand                      (abs)                  00000
__size_of_system_initialize          (abs)                  00000
__size_of_timer_interrupt_handler    (abs)                  00000
__size_of_usart_write                (abs)                  00000
_bit_convt_4to6                      stringtext1            006B7
_button_get_state                    text19                 005BC
_button_init                         text21                 005EF
_button_packet                       bssBANK1               000C8
_button_task                         text10                 00024
_buttons                             bssBANK2               00120
_combo0_pressed                      bssBANK1               000A4
_combo1_pressed                      bssBANK1               000A0
_counter                             bssBANK1               000B0
_counter_inc                         text9                  003A3
_counter_inc_by_n                    text8                  006A6
_counter_read                        text6                  004B1
_counter_save                        text3                  00544
_crc8                                text17                 00681
_last_tick                           bssBANK1               000A8
_main                                maintext               00406
_memcpy                              text16                 00619
_memset                              text22                 0029D
_millis                              text18                 006D3
_rand                                text14                 00322
_reserve_location                    _reserve_location_text 007E0
_reserve_location_absaddr            (abs)                  007E0
_rf_encrypt_and_send                 text12                 0066B
_rf_send_packet                      text11                 001ED
_seed                                bssBANK1               000C0
_srand                               text2                  00695
_system_initialize                   text1                  00586
_tick                                bssBANK1               000AC
_timer0ReloadVal                     nvCOMMON               0007D
_timer_interrupt_handler             text24                 006E5
_usart_write                         text13                 006DD
btemp                                (abs)                  0007E
button_get_state@btn                 cstackCOMMON           00072
button_get_state@state               cstackCOMMON           00073
button_task@combo0_pressed_now       cstackBANK1            000CD
button_task@combo1_pressed_now       cstackBANK1            000D1
button_task@i                        cstackBANK1            000D5
clear_ram0                           clrtext                006ED
counter_inc@ctx                      cstackCOMMON           00072
counter_inc_by_n@ctx                 cstackCOMMON           00077
counter_inc_by_n@i                   cstackCOMMON           00075
counter_inc_by_n@val                 cstackCOMMON           00073
counter_read@ctx                     cstackBANK0            00034
counter_read@i                       cstackBANK0            00035
counter_read@temp                    cstackBANK0            00024
counter_save@block                   cstackBANK0            00029
counter_save@ctx                     cstackBANK0            00069
counter_save@i                       cstackBANK0            0006B
counter_save@temp                    cstackBANK0            0006A
crc8@buffer                          cstackCOMMON           00072
crc8@crc                             cstackCOMMON           00074
crc8@i                               cstackCOMMON           00073
crc8@len                             cstackCOMMON           00070
end_of_initialization                cinit                  00021
int$flags                            (abs)                  0007E
intlevel0                            functab                00000
intlevel1                            functab                00000
intlevel2                            functab                00000
intlevel3                            functab                00000
intlevel4                            functab                00000
intlevel5                            functab                00000
main@seed                            cstackBANK1            000E2
memcpy@d                             cstackCOMMON           00077
memcpy@d1                            cstackCOMMON           00078
memcpy@n                             cstackCOMMON           00072
memcpy@s                             cstackCOMMON           00075
memcpy@s1                            cstackCOMMON           00070
memcpy@tmp                           cstackCOMMON           00074
memset@c                             cstackCOMMON           00072
memset@dest                          cstackCOMMON           00070
memset@k                             cstackBANK0            00020
memset@n                             cstackCOMMON           00074
memset@s                             cstackBANK0            00022
reset_vec                            reset_vec              00000
rf_encrypt_and_send@data             cstackCOMMON           00071
rf_encrypt_and_send@enc              cstackCOMMON           00072
rf_encrypt_and_send@mbyte            cstackCOMMON           00074
rf_send_packet@data                  cstackBANK0            00057
rf_send_packet@i                     cstackBANK0            00058
rf_send_packet@index                 cstackBANK0            00069
rf_send_packet@len                   cstackCOMMON           0007B
rf_send_packet@plain_msg             cstackBANK0            00038
rf_send_packet@random_nm0            cstackBANK0            00061
rf_send_packet@random_nm1            cstackBANK0            00065
rf_send_packet@random_nm2            cstackBANK0            00059
rf_send_packet@tx_id                 cstackBANK0            0005D
srand@s                              cstackCOMMON           00070
start                                init                   00014
start_initialization                 cinit                  00015
usart_write@data                     cstackCOMMON           00070
wtemp0                               (abs)                  0007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 653 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  seed            4   21[BANK1 ] unsigned long 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       4       0
      Temps:          0       0      12       0
      Totals:         0       0      16       0
Total ram usage:       16 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_button_init
		_button_task
		_counter_inc_by_n
		_counter_read
		_counter_save
		_memset
		_millis
		_srand
		_system_initialize
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _system_initialize *****************
 Defined at:
		line 37 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c"
 Parameters:    Size  Location     Type
  s               2    0[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _counter_save *****************
 Defined at:
		line 635 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  ctx             1    wreg     PTR struct .
		 -> counter(16), 
 Auto vars:     Size  Location     Type
  ctx             1   73[BANK0 ] PTR struct .
		 -> counter(16), 
  block          64    9[BANK0 ] unsigned short [32]
  i               1   75[BANK0 ] unsigned char 
  temp            1   74[BANK0 ] PTR unsigned short 
		 -> counter(16), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      67       0       0
      Temps:          0       5       0       0
      Totals:         0      72       0       0
Total ram usage:       72 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_FLASH_WriteBlock
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _FLASH_WriteBlock *****************
 Defined at:
		line 572 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  writeAddr       2    3[COMMON] unsigned short 
  flashWordArr    1    5[COMMON] PTR unsigned short 
		 -> counter_save@block(64), 
 Auto vars:     Size  Location     Type
  blockStartAd    2   10[COMMON] unsigned short 
  i               1   12[COMMON] unsigned char 
  GIEBitValue     1    9[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         3       0       0       0
      Locals:         4       0       0       0
      Temps:          3       0       0       0
      Totals:        10       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_FLASH_EraseBlock
 This function is called by:
		_counter_save
 This function uses a non-reentrant model


 *************** function _FLASH_EraseBlock *****************
 Defined at:
		line 512 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  startAddr       2    0[COMMON] unsigned short 
 Auto vars:     Size  Location     Type
  GIEBitValue     1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_FLASH_WriteBlock
 This function uses a non-reentrant model


 *************** function _counter_read *****************
 Defined at:
		line 622 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  ctx             1    wreg     PTR struct .
		 -> counter(16), 
 Auto vars:     Size  Location     Type
  ctx             1   20[BANK0 ] PTR struct .
		 -> counter(16), 
  i               1   21[BANK0 ] unsigned char 
  temp           16    4[BANK0 ] unsigned short [8]
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      18       0       0
      Temps:          3       0       0       0
      Totals:         3      18       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_FLASH_ReadWord
		_memcpy
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _FLASH_ReadWord *****************
 Defined at:
		line 473 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  flashAddr       2    0[COMMON] unsigned short 
 Auto vars:     Size  Location     Type
  GIEBitValue     1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned short 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_counter_read
 This function uses a non-reentrant model


 *************** function _counter_inc_by_n *****************
 Defined at:
		line 444 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  ctx             1    wreg     PTR struct .
		 -> counter(16), 
  val             2    3[COMMON] unsigned short 
 Auto vars:     Size  Location     Type
  ctx             1    7[COMMON] PTR struct .
		 -> counter(16), 
  i               2    5[COMMON] unsigned short 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_counter_inc
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _counter_inc *****************
 Defined at:
		line 404 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  ctx             1    wreg     PTR struct .
		 -> counter(16), 
 Auto vars:     Size  Location     Type
  ctx             1    2[COMMON] PTR struct .
		 -> counter(16), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          2       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_counter_inc_by_n
 This function uses a non-reentrant model


 *************** function _button_task *****************
 Defined at:
		line 188 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  combo1_press    4    4[BANK1 ] unsigned long 
  combo0_press    4    0[BANK1 ] unsigned long 
  i               1    8[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       9       0
      Temps:          0       4       0       0
      Totals:         0       4       9       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___bmul
		_button_get_state
		_memcpy
		_millis
		_rf_send_packet
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _rf_send_packet *****************
 Defined at:
		line 314 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  data            1    wreg     PTR unsigned char 
		 -> button_packet(5), 
  len             1   11[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  data            1   55[BANK0 ] PTR unsigned char 
		 -> button_packet(5), 
  i               1   56[BANK0 ] unsigned char 
  plain_msg      31   24[BANK0 ] unsigned char [31]
  random_nm1      4   69[BANK0 ] unsigned long 
  random_nm0      4   65[BANK0 ] unsigned long 
  tx_id           4   61[BANK0 ] unsigned long 
  random_nm2      4   57[BANK0 ] unsigned long 
  index           1   73[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2   11[COMMON] int 
 Registers used:
		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         0      50       0       0
      Temps:          1       0       0       0
      Totals:         2      50       0       0
Total ram usage:       52 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_crc8
		_memcpy
		_memset
		_rand
		_rf_encrypt_and_send
		_usart_write
 This function is called by:
		_button_task
 This function uses a non-reentrant model


 *************** function _rf_encrypt_and_send *****************
 Defined at:
		line 277 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    1[COMMON] unsigned char 
  enc             2    2[COMMON] unsigned char [2]
  mbyte           1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_usart_write
 This function is called by:
		_rf_send_packet
 This function uses a non-reentrant model


 *************** function _usart_write *****************
 Defined at:
		line 261 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  data            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  data            1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_rf_encrypt_and_send
		_rf_send_packet
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    9[COMMON] int 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       8       0       0
      Totals:         2       8       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___omul
 This function is called by:
		_rf_send_packet
 This function uses a non-reentrant model


 *************** function ___omul *****************
 Defined at:
		line 91 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul64.c"
 Parameters:    Size  Location     Type
  multiplier      8    0[BANK0 ] unsigned long long 
  multiplicand    8    8[BANK0 ] unsigned long long 
 Auto vars:     Size  Location     Type
  product         8    1[COMMON] unsigned long long 
 Return value:  Size  Location     Type
                  8    0[BANK0 ] unsigned long long 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0      16       0       0
      Locals:         8       0       0       0
      Temps:          1       0       0       0
      Totals:         9      16       0       0
Total ram usage:       25 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function _memcpy *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcpy.c"
 Parameters:    Size  Location     Type
  d1              1    wreg     PTR void 
		 -> counter(16), rf_send_packet@plain_msg(31), button_packet(5), 
  s1              2    0[COMMON] PTR const void 
		 -> counter_read@temp(16), counter(16), button_task@combo1_pressed_now(4), button_task@combo0_pressed_now(4), 
		 -> buttons.duration(4), button_packet(5), buttons(40), 
  n               2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  d1              1    8[COMMON] PTR void 
		 -> counter(16), rf_send_packet@plain_msg(31), button_packet(5), 
  s               2    5[COMMON] PTR const unsigned char 
		 -> counter_read@temp(16), counter(16), button_task@combo1_pressed_now(4), button_task@combo0_pressed_now(4), 
		 -> buttons.duration(4), button_packet(5), buttons(40), 
  d               1    7[COMMON] PTR unsigned char 
		 -> counter(16), rf_send_packet@plain_msg(31), button_packet(5), 
  tmp             1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      PTR void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         5       0       0       0
      Temps:          0       0       0       0
      Totals:         9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_button_task
		_rf_send_packet
		_counter_read
 This function uses a non-reentrant model


 *************** function _crc8 *****************
 Defined at:
		line 299 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR unsigned char 
		 -> rf_send_packet@plain_msg(31), 
  len             1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR unsigned char 
		 -> rf_send_packet@plain_msg(31), 
  i               1    3[COMMON] unsigned char 
  crc             1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_rf_send_packet
 This function uses a non-reentrant model


 *************** function _millis *****************
 Defined at:
		line 117 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_button_task
		_main
 This function uses a non-reentrant model


 *************** function _button_get_state *****************
 Defined at:
		line 139 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
  btn             1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  btn             1    2[COMMON] unsigned char 
  state           1    3[COMMON] _Bool 
 Return value:  Size  Location     Type
                  1    wreg      _Bool 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          2       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_button_task
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    2[COMMON] unsigned char 
  product         1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_button_task
 This function uses a non-reentrant model


 *************** function _button_init *****************
 Defined at:
		line 170 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_memset
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _memset *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c"
 Parameters:    Size  Location     Type
  dest            2    0[COMMON] PTR void 
		 -> counter_save@block(64), counter_read@temp(16), counter(16), rf_send_packet@plain_msg(31), 
		 -> buttons(40), 
  c               2    2[COMMON] int 
  n               2    4[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  s               2    2[BANK0 ] PTR unsigned char 
		 -> counter_save@block(64), counter_read@temp(16), counter(16), rf_send_packet@plain_msg(31), 
		 -> buttons(40), 
  k               2    0[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[COMMON] PTR void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         6       0       0       0
      Locals:         0       4       0       0
      Temps:          4       0       0       0
      Totals:        10       4       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_button_init
		_rf_send_packet
		_counter_read
		_counter_save
		_main
 This function uses a non-reentrant model


 *************** function _INTERRUPT_InterruptManager *****************
 Defined at:
		line 377 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_timer_interrupt_handler
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _timer_interrupt_handler *****************
 Defined at:
		line 109 in file "BTZGDRtx.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_INTERRUPT_InterruptManager
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
BTZGDRtx.c
		_button_get_state		CODE           	05BC	0000	52
		_FLASH_EraseBlock		CODE           	0653	0000	25
		_millis        		CODE           	06D3	0000	11
		_FLASH_ReadWord		CODE           	0639	0000	27
		_counter_inc   		CODE           	03A3	0000	80
		_counter_read  		CODE           	04B1	0000	60
		_counter_save  		CODE           	0544	0000	49
		_counter_inc_by_n		CODE           	06A6	0000	18
		_main          		CODE           	0406	0000	91
		_usart_write   		CODE           	06DD	0000	9
		_system_initialize		CODE           	0586	0000	55
		_FLASH_WriteBlock		CODE           	0460	0000	77
		_rf_encrypt_and_send		CODE           	066B	0000	14
		_INTERRUPT_InterruptManager		CODE           	0004	0000	17
		_crc8          		CODE           	0681	0000	21
		_rf_send_packet		CODE           	01ED	0000	164
		_timer_interrupt_handler		CODE           	06E5	0000	9
		_button_task   		CODE           	0024	0000	409
		_button_init   		CODE           	05EF	0000	36

BTZGDRtx.c estimated size: 1224

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c
		_memset        		CODE           	029D	0000	102

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memset.c estimated size: 102

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c
		___bmul        		CODE           	06C7	0000	13

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c estimated size: 13

shared
		PL12           		CODE           	0612	0000	8
		PL8            		CODE           	030D	0000	14
		PL22           		CODE           	0401	0000	6
		PL32           		CODE           	04F6	0000	8
		PL42           		CODE           	01DE	0000	6
		PL14           		CODE           	03FB	0000	7
		PL24           		CODE           	0574	0000	6
		PL34           		CODE           	04AC	0000	6
		PL44           		CODE           	01E3	0000	6
		PL16           		CODE           	04EC	0000	11
		PL26           		CODE           	0579	0000	8
		PL36           		CODE           	0580	0000	7
		PL46           		CODE           	01E8	0000	6
		PL18           		CODE           	01BC	0000	10
		PL28           		CODE           	01C5	0000	8
		PL38           		CODE           	01D3	0000	7
		__initialization		CODE           	0015	0000	13
		_bit_convt_4to6		STRCODE        	06B7	0000	17
		PL2            		CODE           	03F2	0000	10
		PL10           		CODE           	031A	0000	9
		PL4            		CODE           	0290	0000	14
		PL20           		CODE           	0678	0000	10
		_reserve_location		STRCODE        	07E0	0000	33
		PL30           		CODE           	01CC	0000	8
		PL6            		CODE           	0302	0000	12
		PL40           		CODE           	01D9	0000	6

shared estimated size: 256

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c
		_srand         		CODE           	0695	0000	18
		_rand          		CODE           	0322	0000	130

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\rand.c estimated size: 148

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul64.c
		___omul        		CODE           	04FD	0000	72

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul64.c estimated size: 72

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcpy.c
		_memcpy        		CODE           	0619	0000	33

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\memcpy.c estimated size: 33

